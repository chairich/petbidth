'use client'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/navigation'
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs'
import dayjs from 'dayjs'
import Image from 'next/image'

export default function DemoAuctionForLottery() {
  const router = useRouter()
  const supabase = createClientComponentClient()

  const [user, setUser] = useState<any>(null)
  const [loading, setLoading] = useState(true)
  const [userName, setUserName] = useState('')
  const [avatarUrl, setAvatarUrl] = useState('')
  const [canBid, setCanBid] = useState(false)
  const [mockCount, setMockCount] = useState(0)
  const [bids, setBids] = useState<any[]>([])
  const [auction, setAuction] = useState({
    id: 'demo123',
    title: 'üéØ ‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏≤‡∏¢‡∏´‡∏ß‡∏¢',
    description: '‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏Ñ‡∏£‡∏ö 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏Å‡∏°‡∏ó‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢ 2 ‡∏ï‡∏±‡∏ß!',
    start_price: 1000,
    current_price: 1000,
    images: ['https://lhrszqycskubmmtisyou.supabase.co/storage/v1/object/public/news-images/news-images/1753945797789_0.jpg'],
  })

  // ‡πÇ‡∏´‡∏•‡∏î user ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß
  useEffect(() => {
    const fetchUser = async () => {
      const { data: { session } } = await supabase.auth.getSession()
      const currentUser = session?.user
      if (currentUser) setUser(currentUser)
      setLoading(false)
    }

    fetchUser()

    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, newSession) => {
      if (newSession?.user) {
        setUser(newSession.user)
      } else {
        setUser(null)
      }
    })

    return () => subscription.unsubscribe()
  }, [])

  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï mock ‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà
  useEffect(() => {
    if (!user) return
    const key = `mock-bid-count-${auction.id}-${user.id}`
    localStorage.removeItem(key)
    setMockCount(0)
    setBids([])
    setAuction((prev) => ({ ...prev, current_price: prev.start_price }))
  }, [user])

  // ‡∏î‡∏∂‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  useEffect(() => {
    const fetchProfile = async () => {
      if (!user) return

      const { data: profile } = await supabase.from('users').select('name, avatar_url').eq('id', user.id).single()

      const name = profile?.name || ''
      const avatar = profile?.avatar_url || ''
      setUserName(name)
      setAvatarUrl(avatar)

      const isAllowed = /^A1\d{2}$/.test(name) || /^VIP\d+$/i.test(name)
      setCanBid(isAllowed)
    }

    fetchProfile()
  }, [user])

  const handleMockBid = () => {
    if (!user) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏≤‡∏∞')
      return
    }

    if (!canBid) {
      alert('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ')
      return
    }

    const userId = user.id
    const key = `mock-bid-count-${auction.id}-${userId}`
    const newCount = (Number(localStorage.getItem(key)) || 0) + 1
    localStorage.setItem(key, newCount.toString())

    const nextPrice = auction.current_price + 100
    const fakeBid = {
      id: `mock-${newCount}`,
      bid_price: nextPrice,
      created_at: new Date().toISOString(),
      users: {
        name: userName,
        avatar_url: avatarUrl || '/icons/icon-512x512.png',
      },
    }

    setAuction({ ...auction, current_price: nextPrice })
    setBids([fakeBid, ...bids])
    setMockCount(newCount)

    if (newCount >= 3) {
      alert('üéâ ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏Ñ‡∏£‡∏ö 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß! ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏≤‡∏¢‡∏´‡∏ß‡∏¢')
      router.push('/games/LotteryBoard')
    } else {
      alert(`‚úÖ ‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà ${newCount}/3 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`)
    }
  }

  if (loading) {
    return <div className="text-center py-5 text-white">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>
  }

  return (
    <div className="container py-5 text-white">
      {!user && <div className="alert alert-danger text-center">‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</div>}
      {user && !canBid && (
        <div className="alert alert-warning text-center">‚ö†Ô∏è ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ</div>
      )}

      {userName && (
        <div className="text-center mb-4">
          <p className="text-green-400">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ üë§ ‡∏Ñ‡∏∏‡∏ì: <strong>{userName}  üëã</strong></p>
          {avatarUrl && (
            <img
              src={avatarUrl}
              alt="avatar"
              width={64}
              height={64}
              className="mx-auto rounded-full mt-2"
            />
          )}
          <p className="mt-3 text-white text-lg">
            <br />
            <h2> ‡∏Ç‡∏≠‡πÄ‡∏ä‡∏¥‡∏ç‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• ‡πÇ‡∏î‡∏¢‡πÄ‡∏ä‡∏¥‡∏ç‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏Ç‡πâ‡∏≤!</h2><br />
          </p>
        </div>
      )}

      <div className="row g-4">
        <div className="col-lg-6">
          <div className="border rounded overflow-hidden bg-dark mb-3">
            <Image src={auction.images[0]} alt="demo" width={600} height={600} className="img-fluid w-100" priority unoptimized />
          </div>
        </div>
        <div className="col-lg-6">
          <h2>{auction.title}</h2>
          <p>{auction.description}</p>
          <div className="my-3 h5 text-warning">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {auction.current_price.toLocaleString()} ‡∏ö‡∏≤‡∏ó</div>
          <button className="btn btn-primary rounded-pill w-100" onClick={handleMockBid} disabled={!canBid}>
            ‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á
          </button>
          <div className="mt-4">
            <h5>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏≤‡∏∞ (‡∏à‡∏≥‡∏•‡∏≠‡∏á)</h5>
            <ul className="list-group">
              {bids.length === 0 ? (
                <li className="list-group-item bg-dark text-light">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏≤‡∏∞</li>
              ) : (
                bids.map((bid) => (
                  <li key={bid.id} className="list-group-item bg-dark text-light">
                    <div className="d-flex align-items-center">
                      <img src={bid.users.avatar_url} className="rounded-circle me-2" width="24" height="24" alt="avatar" />
                      <div>
                        {bid.users.name} ‡πÄ‡∏Ñ‡∏≤‡∏∞ {bid.bid_price.toLocaleString()} ‡∏ö‡∏≤‡∏ó<br />
                        <small className="text-muted">{dayjs(bid.created_at).format('HH:mm:ss')}</small>
                      </div>
                    </div>
                  </li>
                ))
              )}
            </ul>
          </div>
        </div>
      </div>
    </div>
  )
}
